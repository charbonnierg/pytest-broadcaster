# generated by datamodel-codegen:
#   filename:  error_message.json

from __future__ import annotations

from dataclasses import dataclass
from enum import Enum
from typing import Optional

from . import location, traceback


class When(Enum):
    """
    When the error message is emitted
    """

    config = "config"
    collect = "collect"
    runtest = "runtest"


@dataclass
class ErrorMessage:
    """
    An error message
    """

    when: When
    """
    When the error message is emitted
    """
    traceback: traceback.Traceback
    """
    The traceback of the error
    """
    exception_type: str
    """
    The exception type
    """
    exception_value: str
    """
    The exception value
    """
    event: str = "ErrorMessage"
    """
    The event type
    """
    location: Optional[location.Location] = None
    """
    The location of the error
    """
