{
  "pytest_version": "8.1.1",
  "plugin_version": "0.4.1.dev74+g384cd74.d20240402",
  "exit_status": 0,
  "errors": [],
  "warnings": [],
  "collect_reports": [
    {
      "node_id": "",
      "items": [
        {
          "node_id": "tests",
          "name": "tests",
          "path": "tests",
          "node_type": "directory"
        }
      ],
      "event": "CollectReport"
    },
    {
      "node_id": "tests/fake_lib/src/fake_lib",
      "items": [],
      "event": "CollectReport"
    },
    {
      "node_id": "tests/fake_lib/src",
      "items": [
        {
          "node_id": "tests/fake_lib/src/fake_lib",
          "name": "fake_lib",
          "path": "tests/fake_lib/src/fake_lib",
          "node_type": "directory"
        }
      ],
      "event": "CollectReport"
    },
    {
      "node_id": "tests/fake_lib",
      "items": [
        {
          "node_id": "tests/fake_lib/src",
          "name": "src",
          "path": "tests/fake_lib/src",
          "node_type": "directory"
        }
      ],
      "event": "CollectReport"
    },
    {
      "node_id": "tests/test_basic.py::TestBasic",
      "items": [
        {
          "node_id": "tests/test_basic.py::TestBasic::test_json",
          "path": "tests/test_basic.py",
          "name": "test_json",
          "doc": "Test JSON report for single test case within single test file.",
          "markers": ["basic"],
          "parameters": {},
          "node_type": "case",
          "module": "tests.test_basic",
          "suite": "TestBasic",
          "function": "test_json"
        },
        {
          "node_id": "tests/test_basic.py::TestBasic::test_jsonl_basic",
          "path": "tests/test_basic.py",
          "name": "test_jsonl_basic",
          "doc": "Test JSON Lines report for single test case within single test file.",
          "markers": ["basic"],
          "parameters": {},
          "node_type": "case",
          "module": "tests.test_basic",
          "suite": "TestBasic",
          "function": "test_jsonl_basic"
        }
      ],
      "event": "CollectReport"
    },
    {
      "node_id": "tests/test_basic.py",
      "items": [
        {
          "node_id": "tests/test_basic.py::TestBasic",
          "name": "TestBasic",
          "module": "tests.test_basic",
          "path": "tests/test_basic.py",
          "doc": "Scenario: A single test case within a single test file.",
          "markers": ["basic"],
          "node_type": "suite"
        }
      ],
      "event": "CollectReport"
    },
    {
      "node_id": "tests/test_basic_marker.py::TestBasicMarker",
      "items": [
        {
          "node_id": "tests/test_basic_marker.py::TestBasicMarker::test_json_basic_marker",
          "path": "tests/test_basic_marker.py",
          "name": "test_json_basic_marker",
          "doc": "Test JSON report for a test file with a single test case with a marker.",
          "markers": ["basic", "markers"],
          "parameters": {},
          "node_type": "case",
          "module": "tests.test_basic_marker",
          "suite": "TestBasicMarker",
          "function": "test_json_basic_marker"
        },
        {
          "node_id": "tests/test_basic_marker.py::TestBasicMarker::test_jsonl_basic_marker",
          "path": "tests/test_basic_marker.py",
          "name": "test_jsonl_basic_marker",
          "doc": "Test JSON Lines report for a test file with a single test case with a marker.",
          "markers": ["basic", "markers"],
          "parameters": {},
          "node_type": "case",
          "module": "tests.test_basic_marker",
          "suite": "TestBasicMarker",
          "function": "test_jsonl_basic_marker"
        }
      ],
      "event": "CollectReport"
    },
    {
      "node_id": "tests/test_basic_marker.py",
      "items": [
        {
          "node_id": "tests/test_basic_marker.py::TestBasicMarker",
          "name": "TestBasicMarker",
          "module": "tests.test_basic_marker",
          "path": "tests/test_basic_marker.py",
          "doc": "Scenario: A single test case with a marker within a single test file.",
          "markers": ["basic", "markers"],
          "node_type": "suite"
        }
      ],
      "event": "CollectReport"
    },
    {
      "node_id": "tests/test_basic_parametrization.py::TestBasicParametrization",
      "items": [
        {
          "node_id": "tests/test_basic_parametrization.py::TestBasicParametrization::test_json",
          "path": "tests/test_basic_parametrization.py",
          "name": "test_json",
          "doc": "Test JSON report for a test file with a single test case with parametrize.",
          "markers": ["basic", "parametrization"],
          "parameters": {},
          "node_type": "case",
          "module": "tests.test_basic_parametrization",
          "suite": "TestBasicParametrization",
          "function": "test_json"
        },
        {
          "node_id": "tests/test_basic_parametrization.py::TestBasicParametrization::test_jsonl",
          "path": "tests/test_basic_parametrization.py",
          "name": "test_jsonl",
          "doc": "Test JSON Lines report for a test file with a single test case with parametrize.",
          "markers": ["basic", "parametrization"],
          "parameters": {},
          "node_type": "case",
          "module": "tests.test_basic_parametrization",
          "suite": "TestBasicParametrization",
          "function": "test_jsonl"
        }
      ],
      "event": "CollectReport"
    },
    {
      "node_id": "tests/test_basic_parametrization.py",
      "items": [
        {
          "node_id": "tests/test_basic_parametrization.py::TestBasicParametrization",
          "name": "TestBasicParametrization",
          "module": "tests.test_basic_parametrization",
          "path": "tests/test_basic_parametrization.py",
          "doc": "Scenario: A single test case with parametrize within a single test file.",
          "markers": ["basic", "parametrization"],
          "node_type": "suite"
        }
      ],
      "event": "CollectReport"
    },
    {
      "node_id": "tests/test_basic_suite.py::TestBasicSuite",
      "items": [
        {
          "node_id": "tests/test_basic_suite.py::TestBasicSuite::test_json",
          "path": "tests/test_basic_suite.py",
          "name": "test_json",
          "doc": "Test JSON report for single test suite within a single test file.",
          "markers": ["basic", "suites"],
          "parameters": {},
          "node_type": "case",
          "module": "tests.test_basic_suite",
          "suite": "TestBasicSuite",
          "function": "test_json"
        },
        {
          "node_id": "tests/test_basic_suite.py::TestBasicSuite::test_jsonl",
          "path": "tests/test_basic_suite.py",
          "name": "test_jsonl",
          "doc": "Test JSON Lines report for single test suite within a single test file.",
          "markers": ["basic", "suites"],
          "parameters": {},
          "node_type": "case",
          "module": "tests.test_basic_suite",
          "suite": "TestBasicSuite",
          "function": "test_jsonl"
        }
      ],
      "event": "CollectReport"
    },
    {
      "node_id": "tests/test_basic_suite.py",
      "items": [
        {
          "node_id": "tests/test_basic_suite.py::TestBasicSuite",
          "name": "TestBasicSuite",
          "module": "tests.test_basic_suite",
          "path": "tests/test_basic_suite.py",
          "doc": "Scenario: several tests cases within a single test suite within a single test file.",
          "markers": ["basic", "suites"],
          "node_type": "suite"
        }
      ],
      "event": "CollectReport"
    },
    {
      "node_id": "tests/test_errors.py::TestErrors",
      "items": [
        {
          "node_id": "tests/test_errors.py::TestErrors::test_json",
          "path": "tests/test_errors.py",
          "name": "test_json",
          "doc": "Test JSON report for test file with emit warnings on collection.",
          "markers": ["basic"],
          "parameters": {},
          "node_type": "case",
          "module": "tests.test_errors",
          "suite": "TestErrors",
          "function": "test_json"
        },
        {
          "node_id": "tests/test_errors.py::TestErrors::test_jsonl",
          "path": "tests/test_errors.py",
          "name": "test_jsonl",
          "doc": "Test JSON Lines report for test file which emits warnings on collection.",
          "markers": ["basic"],
          "parameters": {},
          "node_type": "case",
          "module": "tests.test_errors",
          "suite": "TestErrors",
          "function": "test_jsonl"
        }
      ],
      "event": "CollectReport"
    },
    {
      "node_id": "tests/test_errors.py",
      "items": [
        {
          "node_id": "tests/test_errors.py::TestErrors",
          "name": "TestErrors",
          "module": "tests.test_errors",
          "path": "tests/test_errors.py",
          "doc": "Errors test suite.",
          "markers": ["basic"],
          "node_type": "suite"
        }
      ],
      "event": "CollectReport"
    },
    {
      "node_id": "tests/test_errors_third_party.py::TestErrorsThirdParty",
      "items": [
        {
          "node_id": "tests/test_errors_third_party.py::TestErrorsThirdParty::test_json",
          "path": "tests/test_errors_third_party.py",
          "name": "test_json",
          "doc": "Test JSON report for test file with emit warnings on collection.",
          "markers": ["basic"],
          "parameters": {},
          "node_type": "case",
          "module": "tests.test_errors_third_party",
          "suite": "TestErrorsThirdParty",
          "function": "test_json"
        },
        {
          "node_id": "tests/test_errors_third_party.py::TestErrorsThirdParty::test_jsonl",
          "path": "tests/test_errors_third_party.py",
          "name": "test_jsonl",
          "doc": "Test JSON Lines report for test file which emits warnings on collection.",
          "markers": ["basic"],
          "parameters": {},
          "node_type": "case",
          "module": "tests.test_errors_third_party",
          "suite": "TestErrorsThirdParty",
          "function": "test_jsonl"
        }
      ],
      "event": "CollectReport"
    },
    {
      "node_id": "tests/test_errors_third_party.py",
      "items": [
        {
          "node_id": "tests/test_errors_third_party.py::TestErrorsThirdParty",
          "name": "TestErrorsThirdParty",
          "module": "tests.test_errors_third_party",
          "path": "tests/test_errors_third_party.py",
          "doc": "Errors test suite.",
          "markers": ["basic"],
          "node_type": "suite"
        }
      ],
      "event": "CollectReport"
    },
    {
      "node_id": "tests/test_multi_cases.py::TestMultiCases",
      "items": [
        {
          "node_id": "tests/test_multi_cases.py::TestMultiCases::test_json",
          "path": "tests/test_multi_cases.py",
          "name": "test_json",
          "doc": "Test JSON report for single test file with multiple test cases.",
          "markers": ["basic"],
          "parameters": {},
          "node_type": "case",
          "module": "tests.test_multi_cases",
          "suite": "TestMultiCases",
          "function": "test_json"
        },
        {
          "node_id": "tests/test_multi_cases.py::TestMultiCases::test_jsonl",
          "path": "tests/test_multi_cases.py",
          "name": "test_jsonl",
          "doc": "Test JSON Lines report for single test file with multiple test cases.",
          "markers": ["basic"],
          "parameters": {},
          "node_type": "case",
          "module": "tests.test_multi_cases",
          "suite": "TestMultiCases",
          "function": "test_jsonl"
        }
      ],
      "event": "CollectReport"
    },
    {
      "node_id": "tests/test_multi_cases.py",
      "items": [
        {
          "node_id": "tests/test_multi_cases.py::TestMultiCases",
          "name": "TestMultiCases",
          "module": "tests.test_multi_cases",
          "path": "tests/test_multi_cases.py",
          "doc": "Scenario: Several test cases within a single test file.",
          "markers": ["basic"],
          "node_type": "suite"
        }
      ],
      "event": "CollectReport"
    },
    {
      "node_id": "tests/test_multi_files.py::TestMultiFiles",
      "items": [
        {
          "node_id": "tests/test_multi_files.py::TestMultiFiles::test_json",
          "path": "tests/test_multi_files.py",
          "name": "test_json",
          "doc": "Test JSON report for several test cases within several test files.",
          "markers": ["basic", "filetree"],
          "parameters": {},
          "node_type": "case",
          "module": "tests.test_multi_files",
          "suite": "TestMultiFiles",
          "function": "test_json"
        },
        {
          "node_id": "tests/test_multi_files.py::TestMultiFiles::test_jsonl",
          "path": "tests/test_multi_files.py",
          "name": "test_jsonl",
          "doc": "Test JSON Lines report for several test cases within several test files.",
          "markers": ["basic", "filetree"],
          "parameters": {},
          "node_type": "case",
          "module": "tests.test_multi_files",
          "suite": "TestMultiFiles",
          "function": "test_jsonl"
        }
      ],
      "event": "CollectReport"
    },
    {
      "node_id": "tests/test_multi_files.py",
      "items": [
        {
          "node_id": "tests/test_multi_files.py::TestMultiFiles",
          "name": "TestMultiFiles",
          "module": "tests.test_multi_files",
          "path": "tests/test_multi_files.py",
          "doc": "Scenario: several test files with several test cases.",
          "markers": ["basic", "filetree"],
          "node_type": "suite"
        }
      ],
      "event": "CollectReport"
    },
    {
      "node_id": "tests/test_multi_suite.py::TestMultiSuite",
      "items": [
        {
          "node_id": "tests/test_multi_suite.py::TestMultiSuite::test_json",
          "path": "tests/test_multi_suite.py",
          "name": "test_json",
          "doc": "Test JSON report for several test suites within several test files.",
          "markers": ["suites", "filetree"],
          "parameters": {},
          "node_type": "case",
          "module": "tests.test_multi_suite",
          "suite": "TestMultiSuite",
          "function": "test_json"
        },
        {
          "node_id": "tests/test_multi_suite.py::TestMultiSuite::test_jsonl",
          "path": "tests/test_multi_suite.py",
          "name": "test_jsonl",
          "doc": "Test JSON Lines report for several test suites within several test files.",
          "markers": ["suites", "filetree"],
          "parameters": {},
          "node_type": "case",
          "module": "tests.test_multi_suite",
          "suite": "TestMultiSuite",
          "function": "test_jsonl"
        }
      ],
      "event": "CollectReport"
    },
    {
      "node_id": "tests/test_multi_suite.py",
      "items": [
        {
          "node_id": "tests/test_multi_suite.py::TestMultiSuite",
          "name": "TestMultiSuite",
          "module": "tests.test_multi_suite",
          "path": "tests/test_multi_suite.py",
          "doc": "Scenario: Several test suites within several test files.",
          "markers": ["suites", "filetree"],
          "node_type": "suite"
        }
      ],
      "event": "CollectReport"
    },
    {
      "node_id": "tests/test_nested_markers.py::TestNestedMarker",
      "items": [
        {
          "node_id": "tests/test_nested_markers.py::TestNestedMarker::test_json",
          "path": "tests/test_nested_markers.py",
          "name": "test_json",
          "doc": "Test JSON report for a test file with a single test case with a marker.",
          "markers": ["markers"],
          "parameters": {},
          "node_type": "case",
          "module": "tests.test_nested_markers",
          "suite": "TestNestedMarker",
          "function": "test_json"
        },
        {
          "node_id": "tests/test_nested_markers.py::TestNestedMarker::test_jsonl",
          "path": "tests/test_nested_markers.py",
          "name": "test_jsonl",
          "doc": "Test JSON Lines report for a test file with a single test case with a marker.",
          "markers": ["markers"],
          "parameters": {},
          "node_type": "case",
          "module": "tests.test_nested_markers",
          "suite": "TestNestedMarker",
          "function": "test_jsonl"
        }
      ],
      "event": "CollectReport"
    },
    {
      "node_id": "tests/test_nested_markers.py",
      "items": [
        {
          "node_id": "tests/test_nested_markers.py::TestNestedMarker",
          "name": "TestNestedMarker",
          "module": "tests.test_nested_markers",
          "path": "tests/test_nested_markers.py",
          "doc": "Scenario: A test suite with a marker and a single test with same marker.",
          "markers": ["markers"],
          "node_type": "suite"
        }
      ],
      "event": "CollectReport"
    },
    {
      "node_id": "tests/test_version.py",
      "items": [
        {
          "node_id": "tests/test_version.py::test_pytest_discover_version",
          "path": "tests/test_version.py",
          "name": "test_pytest_discover_version",
          "doc": "Test pytest_discover version is generated.",
          "markers": ["buildmeta"],
          "parameters": {},
          "node_type": "case",
          "module": "tests.test_version",
          "suite": null,
          "function": "test_pytest_discover_version"
        }
      ],
      "event": "CollectReport"
    },
    {
      "node_id": "tests/test_warnings.py::TestWarnings",
      "items": [
        {
          "node_id": "tests/test_warnings.py::TestWarnings::test_json",
          "path": "tests/test_warnings.py",
          "name": "test_json",
          "doc": "Test JSON report for test file with emit warnings on collection.",
          "markers": ["basic"],
          "parameters": {},
          "node_type": "case",
          "module": "tests.test_warnings",
          "suite": "TestWarnings",
          "function": "test_json"
        },
        {
          "node_id": "tests/test_warnings.py::TestWarnings::test_jsonl",
          "path": "tests/test_warnings.py",
          "name": "test_jsonl",
          "doc": "Test JSON Lines report for test file which emits warnings on collection.",
          "markers": ["basic"],
          "parameters": {},
          "node_type": "case",
          "module": "tests.test_warnings",
          "suite": "TestWarnings",
          "function": "test_jsonl"
        }
      ],
      "event": "CollectReport"
    },
    {
      "node_id": "tests/test_warnings.py",
      "items": [
        {
          "node_id": "tests/test_warnings.py::TestWarnings",
          "name": "TestWarnings",
          "module": "tests.test_warnings",
          "path": "tests/test_warnings.py",
          "doc": "Warnings test suite.",
          "markers": ["basic"],
          "node_type": "suite"
        }
      ],
      "event": "CollectReport"
    },
    {
      "node_id": "tests/test_warnings_third_party.py::TestWarningsThirdParty",
      "items": [
        {
          "node_id": "tests/test_warnings_third_party.py::TestWarningsThirdParty::test_json",
          "path": "tests/test_warnings_third_party.py",
          "name": "test_json",
          "doc": "Test JSON report for test file with warnings.",
          "markers": ["basic"],
          "parameters": {},
          "node_type": "case",
          "module": "tests.test_warnings_third_party",
          "suite": "TestWarningsThirdParty",
          "function": "test_json"
        },
        {
          "node_id": "tests/test_warnings_third_party.py::TestWarningsThirdParty::test_jsonl",
          "path": "tests/test_warnings_third_party.py",
          "name": "test_jsonl",
          "doc": "Test JSON Lines report for basic test file.",
          "markers": ["basic"],
          "parameters": {},
          "node_type": "case",
          "module": "tests.test_warnings_third_party",
          "suite": "TestWarningsThirdParty",
          "function": "test_jsonl"
        }
      ],
      "event": "CollectReport"
    },
    {
      "node_id": "tests/test_warnings_third_party.py",
      "items": [
        {
          "node_id": "tests/test_warnings_third_party.py::TestWarningsThirdParty",
          "name": "TestWarningsThirdParty",
          "module": "tests.test_warnings_third_party",
          "path": "tests/test_warnings_third_party.py",
          "doc": "Warnings from third party module test suite.",
          "markers": ["basic"],
          "node_type": "suite"
        }
      ],
      "event": "CollectReport"
    },
    {
      "node_id": "tests",
      "items": [
        {
          "node_id": "tests/fake_lib",
          "name": "fake_lib",
          "path": "tests/fake_lib",
          "node_type": "directory"
        },
        {
          "node_id": "tests/test_basic.py",
          "name": "test_basic.py",
          "path": "tests/test_basic.py",
          "doc": "",
          "markers": [],
          "node_type": "module"
        },
        {
          "node_id": "tests/test_basic_marker.py",
          "name": "test_basic_marker.py",
          "path": "tests/test_basic_marker.py",
          "doc": "",
          "markers": [],
          "node_type": "module"
        },
        {
          "node_id": "tests/test_basic_parametrization.py",
          "name": "test_basic_parametrization.py",
          "path": "tests/test_basic_parametrization.py",
          "doc": "",
          "markers": [],
          "node_type": "module"
        },
        {
          "node_id": "tests/test_basic_suite.py",
          "name": "test_basic_suite.py",
          "path": "tests/test_basic_suite.py",
          "doc": "",
          "markers": [],
          "node_type": "module"
        },
        {
          "node_id": "tests/test_errors.py",
          "name": "test_errors.py",
          "path": "tests/test_errors.py",
          "doc": "",
          "markers": [],
          "node_type": "module"
        },
        {
          "node_id": "tests/test_errors_third_party.py",
          "name": "test_errors_third_party.py",
          "path": "tests/test_errors_third_party.py",
          "doc": "",
          "markers": [],
          "node_type": "module"
        },
        {
          "node_id": "tests/test_multi_cases.py",
          "name": "test_multi_cases.py",
          "path": "tests/test_multi_cases.py",
          "doc": "",
          "markers": [],
          "node_type": "module"
        },
        {
          "node_id": "tests/test_multi_files.py",
          "name": "test_multi_files.py",
          "path": "tests/test_multi_files.py",
          "doc": "",
          "markers": [],
          "node_type": "module"
        },
        {
          "node_id": "tests/test_multi_suite.py",
          "name": "test_multi_suite.py",
          "path": "tests/test_multi_suite.py",
          "doc": "",
          "markers": [],
          "node_type": "module"
        },
        {
          "node_id": "tests/test_nested_markers.py",
          "name": "test_nested_markers.py",
          "path": "tests/test_nested_markers.py",
          "doc": "",
          "markers": [],
          "node_type": "module"
        },
        {
          "node_id": "tests/test_version.py",
          "name": "test_version.py",
          "path": "tests/test_version.py",
          "doc": "",
          "markers": [],
          "node_type": "module"
        },
        {
          "node_id": "tests/test_warnings.py",
          "name": "test_warnings.py",
          "path": "tests/test_warnings.py",
          "doc": "",
          "markers": [],
          "node_type": "module"
        },
        {
          "node_id": "tests/test_warnings_third_party.py",
          "name": "test_warnings_third_party.py",
          "path": "tests/test_warnings_third_party.py",
          "doc": "",
          "markers": [],
          "node_type": "module"
        }
      ],
      "event": "CollectReport"
    }
  ]
}
