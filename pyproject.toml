[project]
name = "pytest-discover"
description = "Pytest plugin to record discovered tests in a file"
authors = [
    { name = "Guillaume Charbonnier", email = "guillaume.charbonnier@araymond.com" }
]
dependencies = ["pytest"]
dynamic = ["version"]
readme = "README.md"
requires-python = ">= 3.8"

[project.entry-points.pytest11]
pytest_discover = "pytest_discover.plugin"

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "vcs"
fallback-version = "v0.0.0-dev"

[tool.hatch.build.hooks.vcs]
version-file = "_version.py"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/pytest_discover"]

[tool.rye]
managed = true
dev-dependencies = [
    "datamodel-code-generator>=0.25.5",
    "pyright>=1.1.355",
]

[tool.rye.scripts]
# Automate pre-commit
pre = { chain = ["generate", "__format", "__lint", "__test", "__typecheck"] }
# Automate CI
ci = { chain = ["bootstrap", "diff", "__formatcheck", "__lint", "__test", "__typecheck"] }
# Automate project install
bootstrap = { cmd = "rye sync --no-lock" }
# Run code generation
generate = { chain = ["__generate-models", "__format-models", "__generate-schemas"] }
# Verify generated code is up-to-date
diff = { chain = ["__generate-models-check", "__format-models-check", "__generate-models-diff"] }
# Private tasks used for chaining
__lint = { cmd = "rye lint" }
__test = { cmd = "rye test" }
__typecheck = { cmd = "pyright" }
__format = { cmd = "rye fmt" }
__formatcheck = { cmd = "rye fmt --check" }
__generate-schemas = { cmd = "python scripts/generate-json-schemas.py" }
__generate-models = { cmd = "datamodel-codegen --input src/schemas/ --output src/pytest_discover/models --input-file-type jsonschema --disable-timestamp --output-model-type=dataclasses.dataclass --use-field-description --use-schema-description" }
__generate-models-check = { cmd = "datamodel-codegen --input src/schemas/ --output check --input-file-type jsonschema --disable-timestamp --output-model-type=dataclasses.dataclass --use-field-description --use-schema-description" }
__generate-models-diff = { cmd = "diff --exclude __pycache__ -r src/pytest_discover/models check" }
__format-models = { cmd = "rye fmt src/pytest_discover/models" }
__format-models-check = { cmd = "rye fmt check" }

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.pyright]
pythonVersion = "3.8"
include = ["tests", "src"]
strict = ["src"]
exclude = ["**/.venv", "**/node_modules", "**/__pycache__", ".git", "**/build"]
venv = ".venv"
venvPath = "."
typeCheckingMode = "basic"
reportUnnecessaryTypeIgnoreComment = "warning"
